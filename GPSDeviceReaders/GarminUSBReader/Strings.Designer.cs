//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickRoute.GPSDeviceReaders.GarminUSBReader {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuickRoute.GPSDeviceReaders.GarminUSBReader.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to almanac.
        /// </summary>
        internal static string Almanac {
            get {
                return ResourceManager.GetString("Almanac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to date and time.
        /// </summary>
        internal static string DateAndTime {
            get {
                return ResourceManager.GetString("DateAndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not communicate with Garmin USB device. Please make sure that it&apos;s properly installed..
        /// </summary>
        internal static string ErrorCommunicatingWithDevice {
            get {
                return ResourceManager.GetString("ErrorCommunicatingWithDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find Garmin USB device. Please make sure that it&apos;s properly installed..
        /// </summary>
        internal static string ErrorFindingDevice {
            get {
                return ResourceManager.GetString("ErrorFindingDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to laps.
        /// </summary>
        internal static string Laps {
            get {
                return ResourceManager.GetString("Laps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to positions.
        /// </summary>
        internal static string Position {
            get {
                return ResourceManager.GetString("Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to product data.
        /// </summary>
        internal static string ProductData {
            get {
                return ResourceManager.GetString("ProductData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to runs.
        /// </summary>
        internal static string Runs {
            get {
                return ResourceManager.GetString("Runs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step {0} of {1}: reading {2}....
        /// </summary>
        internal static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to routes.
        /// </summary>
        internal static string Tracks {
            get {
                return ResourceManager.GetString("Tracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USB Read Error.
        /// </summary>
        internal static string USBReadError {
            get {
                return ResourceManager.GetString("USBReadError", resourceCulture);
            }
        }
    }
}
